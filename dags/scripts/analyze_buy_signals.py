import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os

# Create output directory if it doesn't exist
os.makedirs("output", exist_ok=True)

# Path to the CSV generated by your DAG
csv_path = "/opt/airflow/volumes/output/stock_buy_signals.csv"

if not os.path.exists(csv_path):
    raise FileNotFoundError(f"{csv_path} not found. Make sure the DAG has run and generated the CSV.")

# Load data
df = pd.read_csv(csv_path)
df.columns = df.columns.str.strip()  # Clean column names
df['date'] = pd.to_datetime(df['date'])
df = df.sort_values(by=['symbol', 'date'])

# Calculate forward-looking returns for multiple horizons
horizons = [1, 5, 10, 20, 30]
for h in horizons:
    col_name = f'return_{h}d'
    # pct_change over period h, shifted backward by h days for forward return
    df[col_name] = df.groupby('symbol')['close_price'].pct_change(periods=h).shift(-h)

# Ensure buy_signal column exists
if 'buy_signal' not in df.columns:
    df['buy_signal'] = False

# Summarize returns with count, avg, median, and win rate
def summarize_returns(df, return_col):
    filtered = df.dropna(subset=[return_col])
    summary = filtered.groupby('buy_signal').agg(
        count=(return_col, 'size'),
        avg_return=(return_col, 'mean'),
        median_return=(return_col, 'median'),
        win_rate=(return_col, lambda x: (x > 0).mean())
    ).reset_index()
    summary['return_period'] = return_col
    return summary

# Collect summaries for all horizons
summary_list = [summarize_returns(df, f'return_{h}d') for h in horizons]
summary = pd.concat(summary_list, ignore_index=True)

# Save summary to CSV for record
summary.to_csv("output/buy_signal_return_summary.csv", index=False)

# Plot Average Return by Buy Signal
plt.figure(figsize=(12,6))
sns.barplot(data=summary, x='return_period', y='avg_return', hue='buy_signal')
plt.title("Average Return by Buy Signal and Return Period")
plt.xlabel("Return Period")
plt.ylabel("Average Return (fraction)")
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig("/opt/airflow/volumes/output/avg_return_by_buy_signal.png")
plt.close()

# Plot Win Rate by Buy Signal
plt.figure(figsize=(12,6))
sns.barplot(data=summary, x='return_period', y='win_rate', hue='buy_signal')
plt.title("Win Rate by Buy Signal and Return Period")
plt.xlabel("Return Period")
plt.ylabel("Win Rate (fraction)")
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig("/opt/airflow/volumes/output/win_rate_by_buy_signal.png")
plt.close()

print("âœ… Analysis complete. Plots saved to output/")